document.addEventListener("DOMContentLoaded",function(){const e={restaurant:[{name:"id",type:"string",desc:"Unique identifier for the restaurant",required:!0},{name:"name",type:"string",desc:"Name of the restaurant",required:!0},{name:"active",type:"boolean",desc:"Whether the restaurant is currently active in the system"},{name:"code",type:"string",desc:"Unique restaurant code"},{name:"latitude",type:"number",desc:"Geographic latitude coordinate"},{name:"longitude",type:"number",desc:"Geographic longitude coordinate"},{name:"tz",type:"string",desc:"Restaurant timezone (IANA format)"},{name:"created-at",type:"string",desc:"ISO timestamp of when the restaurant was created"},{name:"online-booking-lead-months",type:"integer",desc:"Number of months in advance online bookings are accepted"},{name:"cancelation-delay",type:"integer",desc:"Cancellation window in seconds (e.g., 86400 = 24 hours)"},{name:"service-scopes",type:"array",desc:"Array of service periods with name, startTime and endTime"}],restaurantGet:[{name:"restaurant-code",type:"string",desc:"Restaurant code",required:!0}],restaurantGetAvailability:[{name:"restaurant-code",type:"string",desc:"Restaurant code",required:!0},{name:"date",type:"string",desc:"Date in YYYY-MM-DD format",required:!0},{name:"size",type:"integer",desc:"Party size",required:!0}],booking:[{name:"size",type:"integer",desc:"Number of guests in the booking"},{name:"time",type:"string",desc:"Scheduled arrival time"},{name:"table-number",type:"string",desc:"Assigned table number"},{name:"private-note",type:"string",desc:"Internal/private note"},{name:"note",type:"string",desc:"Public note"},{name:"locale",type:"string",desc:"Guest\\'s preferred language"},{name:"status",type:"string",desc:"Current status of the booking",values:["approved","canceled","confirmed","noshow","pending","seated","partial","arrived","completed"]},{name:"booking-type",type:"string",desc:"Type of booking",values:["reservation","walk-in"]},{name:"source",type:"string",desc:"Booking source",values:["online","dashboard","google","..."]},{name:"created-at",type:"string",desc:"When the booking was created"},{name:"arrived-at",type:"string",desc:"When the guest arrived"},{name:"expected-leave-at",type:"string",desc:"Expected time of departure"},{name:"confirmed-at",type:"string",desc:"When the booking was confirmed"},{name:"seated-at",type:"string",desc:"When the guest was seated"},{name:"completed-at",type:"string",desc:"When the booking was completed"},{name:"canceled-at",type:"string",desc:"When the booking was canceled"},{name:"cancelation-allowed-until",type:"string",desc:"The exact timestamp until which the reservation can be canceled"}],bookingGet:[{name:"id",type:"string",desc:"Unique identifier for the booking"}],bookingList:[{name:"limit",type:"integer",desc:"Number of records per request"},{name:"offset",type:"integer",desc:"Record offset to start from for pagination"},{name:"updated-after",type:"datetime",desc:"Limit results to those updated after this date/time"},{name:"created-after",type:"datetime",desc:"Limit results to those created after this date/time"},{name:"started-after",type:"datetime",desc:"Limit results to those with a start time after the specified timestamp"},{name:"started-before",type:"datetime",desc:"Limit results to those with a start time before the specified timestamp"},{name:"date",type:"date",desc:"Retrieve bookings for a specific date in the format YYYY-MM-DD"},{name:"time",type:"string",desc:"Retrieve bookings for a specific time in the format HH:mm. This parameter must be used in combination with the date"},{name:"status",type:"string",desc:"Retrieve bookings with a specific status (approved, canceled, confirmed, noshow, pending, seated, partial, arrived, completed)"},{name:"guest-id",type:"integer",desc:"Guest ID to filter the bookings"}],restaurantCode:[{name:"restaurant-code",type:"string",desc:"Restaurant code",required:!0}],createBooking:[{name:"size",type:"integer",desc:"Number of guests",required:!0},{name:"date",type:"string",desc:"Booking date (format YYYY-MM-DD)",required:!0},{name:"time",type:"string",desc:"Booking time (format HH:MM:SS)",required:!0},{name:"note",type:"string",desc:"Note for the restaurant staff"},{name:"locale",type:"string",desc:"Guest's preferred language (BCP 47 code)"},{name:"table-number",type:"string",desc:"Table number for the booking"},{name:"booking-experience-id",type:"integer",desc:"ID of the booking experience"}],updateBooking:[{name:"note",type:"string",desc:"Note for the restaurant staff"},{name:"locale",type:"string",desc:"Guest's preferred language (BCP 47 code)"}],person:[{name:"id",type:"integer",desc:"Guest's ID"},{name:"first-name",type:"string",desc:"Guest's first name",required:!0},{name:"last-name",type:"string",desc:"Guest's last name",required:!0},{name:"email",type:"string",desc:"Guest's email address",required:!0},{name:"phone",type:"string",desc:"Guest's phone number",required:!0},{name:"preferred-communication-channel",type:"string",desc:'Preferred contact method ("email" or "phone")'},{name:"locale",type:"string",desc:"Guest's language preference"}],bookingErrors:[{name:"404",type:"string",desc:"Booking not found"},{name:"409",type:"string",desc:"Booking could not be canceled"}],rescheduleBooking:[{name:"date",type:"string",desc:"Booking date (format YYYY-MM-DD)",required:!0},{name:"time",type:"string",desc:"Booking time (format HH:MM:SS)",required:!0},{name:"size",type:"integer",desc:"Number of guests"},{name:"booking-experience-id",type:"integer",desc:"ID of the booking experience"}],deviceInfos:[{name:"id",type:"string",desc:"Unique identifier for the device"},{name:"ip",type:"string",desc:"IP address of the device"}]};document.querySelectorAll(".dynamic-attributes").forEach(function(t){const n=t.getAttribute("data-attr-type"),a=e[n];a&&a.length>0&&a.forEach(function(e){t.innerHTML+='<div class="stripe-attribute"><div class="attr-header"><span class="attr-name"><code>'+e.name+'</code></span><span class="attr-type">'+e.type+'</span><span class="attr-req">'+(e.required?"Required":"")+'</span></div><div class="attr-description">'+e.desc+'</div><div class="attr-values">'+(e.values?"Values: "+e.values.join(", "):"")+"</div></div>"})})});